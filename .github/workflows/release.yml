name: Release

on:
    push:
        branches:
            - main
    workflow_dispatch:

jobs:
    release:
        runs-on: ubuntu-latest
        if: ${{ !contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci') }}
        outputs:
            tag_name: ${{ steps.remember_tag.outputs.tag_name }}
        steps:
            - uses: actions/checkout@v3

            - name: Prepare repository
              run: git fetch --unshallow --tags

            - name: Use Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: lts/*

            - name: Install dependencies
              run: npm ci

            - name: Compile filterlist
              run: |
                  npm run compile-filterlist

            - name: Create Release
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
              run: |
                  npm run release

            - name: Remember git tag
              id: remember_tag
              run: echo "tag_name=$(git describe --exact-match --tags)" >> "$GITHUB_OUTPUT"

    # ------------------------------------------------------------------------------
    # Retrieve the corresponding Release data from the GitHub API
    # ------------------------------------------------------------------------------
    get_release_info:
        runs-on: ubuntu-latest
        needs: release
        if: ${{ needs.release.outputs.tag_name != '' }}
        outputs:
            release-url: ${{ steps.get-release-url.outputs.result }}
            release-notes: ${{ steps.get-release-notes.outputs.result }}
        steps:
            - name: Get Release URL
              id: get-release-url
              uses: actions/github-script@v4
              with:
                  result-encoding: string
                  script: |
                      const { data } = await github.repos.getReleaseByTag({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        tag: process.env.TAG
                      });
                      return data.html_url;

            - name: Get Release Notes
              id: get-release-notes
              uses: actions/github-script@v4
              with:
                  result-encoding: string
                  script: |
                      const { data } = await github.repos.getReleaseByTag({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        tag: process.env.TAG
                      });
                      return data.body;

    # ------------------------------------------------------------------------------
    # Create initial Asana subtasks
    # ------------------------------------------------------------------------------
    create_asana_tasks:
        needs: get_release_info
        runs-on: ubuntu-latest
        outputs:
            task-gid: ${{ steps.create-asana-tasks.outputs.TASK_GID }}
        env:
            RELEASE_URL: ${{ needs.get_release_info.outputs.release-url }}
        steps:
            # --- Setup ---
            - uses: actions/checkout@v3
              with:
                  path: autoconsent/
            - uses: ./autoconsent/.github/actions/setup-release-scripts
            # --- Effect ---
            - name: Create Asana Tasks
              id: create-asana-tasks
              env:
                  ASANA_ACCESS_TOKEN: ${{ secrets.ASANA_ACCESS_TOKEN }}
              run: |
                  RELEASE_TASK_GID="$(node ./autoconsent/ci/asana-create-tasks.js)"
                  echo

    # ------------------------------------------------------------------------------
    # Create PR to privacy-configuration repository
    # ------------------------------------------------------------------------------
    rule-release:
        name: Propagate rules to privacy config
        needs:
            - release
            - create_asana_tasks
        uses: ./.github/workflows/privacy-config-pr.yml
        secrets: inherit
        with:
            tag_name: ${{ needs.release.outputs.tag_name }}
            asana_task_gid: ${{ needs.create_asana_tasks.outputs.task-gid }}
